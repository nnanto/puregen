name: "UserService"
version: "1.0.0"
package: "com.example.user"

messages:
  User:
    name: "User"
    description: "Represents a user in the system"
    fields:
      id:
        type: "string"
        description: "Unique identifier for the user"
        required: true
      email:
        type: "string"
        description: "User's email address"
        required: true
        metadata:
          validation: "email"
      name:
        type: "string"
        description: "User's display name"
        required: false
      tags:
        type: "string"
        description: "User tags"
        repeated: true
      created_at:
        type: "timestamp"
        description: "When the user was created"
        required: true
    metadata:
      table: "users"
      primary_key: "id"

  CreateUserRequest:
    name: "CreateUserRequest"
    description: "Request message for creating a new user"
    fields:
      email:
        type: "string"
        required: true
      name:
        type: "string"
        required: true
      tags:
        type: "string"
        repeated: true

  GetUserRequest:
    name: "GetUserRequest"
    fields:
      id:
        type: "string"
        required: true

  ListUsersRequest:
    name: "ListUsersRequest"
    fields:
      page_size:
        type: "int32"
        description: "Number of users to return"
      page_token:
        type: "string"
        description: "Token for pagination"

  ListUsersResponse:
    name: "ListUsersResponse"
    fields:
      users:
        type: "User"
        repeated: true
      next_page_token:
        type: "string"

services:
  UserService:
    description: "Service for managing users"
    methods:
      CreateUser:
        name: "CreateUser"
        description: "Creates a new user"
        input: "CreateUserRequest"
        output: "User"
        metadata:
          http_method: "POST"
          http_path: "/users"
      
      GetUser:
        name: "GetUser"
        description: "Retrieves a user by ID"
        input: "GetUserRequest"
        output: "User"
        metadata:
          http_method: "GET"
          http_path: "/users/{id}"
      
      ListUsers:
        name: "ListUsers"
        description: "Lists all users with pagination"
        input: "ListUsersRequest"
        output: "ListUsersResponse"
        metadata:
          http_method: "GET"
          http_path: "/users"
      
      StreamUsers:
        name: "StreamUsers"
        description: "Streams users in real-time"
        input: "ListUsersRequest"
        output: "User"
        streaming: true
    metadata:
      base_path: "/api/v1"
      auth_required: true
