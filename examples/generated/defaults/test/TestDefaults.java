// Code generated by protoc-gen-puregen. DO NOT EDIT.

package defaults.test;

import java.util.*;
import java.io.*;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

    // 
public class TestDefaults {
    // String field with default value
    @JsonProperty("message")
    private String message;

    // Integer field with default value
    @JsonProperty("count")
    private int count;

    // Boolean field with default value
    @JsonProperty("enabled")
    private boolean enabled;

    // Float field with default value
    @JsonProperty("ratio")
    private float ratio;

    // Field without default value (should use language defaults)
    @JsonProperty("description")
    private String description;

    // Field without default value
    @JsonProperty("age")
    private int age;

    public TestDefaults() {
        this.message = "hello world";
        this.count = 42;
        this.enabled = true;
        this.ratio = 3.14f;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public int getCount() {
        return count;
    }

    public void setCount(int count) {
        this.count = count;
    }

    public boolean getEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public float getRatio() {
        return ratio;
    }

    public void setRatio(float ratio) {
        this.ratio = ratio;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public static class Builder {
        private TestDefaults instance = new TestDefaults();

        public Builder setMessage(String message) {
            instance.setMessage(message);
            return this;
        }

        public Builder setCount(int count) {
            instance.setCount(count);
            return this;
        }

        public Builder setEnabled(boolean enabled) {
            instance.setEnabled(enabled);
            return this;
        }

        public Builder setRatio(float ratio) {
            instance.setRatio(ratio);
            return this;
        }

        public Builder setDescription(String description) {
            instance.setDescription(description);
            return this;
        }

        public Builder setAge(int age) {
            instance.setAge(age);
            return this;
        }

        public TestDefaults build() {
            return instance;
        }
    }

    public boolean validate() {
        // Add custom validation logic here
        return true;
    }

    public String toJson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.writeValueAsString(this);
    }

    public static TestDefaults fromJson(String json) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(json, TestDefaults.class);
    }

}
