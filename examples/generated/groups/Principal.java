// Code generated by protoc-gen-puregen. DO NOT EDIT.

package groups;

import java.util.*;
import java.io.*;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

public class Principal {
    // Unique identifier for the principal
    @JsonProperty("id")
    private String id;

    // Name of the principal
    @JsonProperty("name")
    private String name;

    // Type of the principal (e.g., "user", "group")
    @JsonProperty("type")
    private String type;

    // Roles assigned to the principal
    @JsonProperty("roles")
    private List<String> roles = new ArrayList<>();

    public Principal() {}

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public List<String> getRoles() {
        return roles;
    }

    public void setRoles(List<String> roles) {
        this.roles = roles;
    }

    public void addRoles(String item) {
        if (this.roles == null) {
            this.roles = new ArrayList<>();
        }
        this.roles.add(item);
    }

    public static class Builder {
        private Principal instance = new Principal();

        public Builder setId(String id) {
            instance.setId(id);
            return this;
        }

        public Builder setName(String name) {
            instance.setName(name);
            return this;
        }

        public Builder setType(String type) {
            instance.setType(type);
            return this;
        }

        public Builder setRoles(List<String> roles) {
            instance.setRoles(roles);
            return this;
        }

        public Principal build() {
            return instance;
        }
    }

    public boolean validate() {
        // Add custom validation logic here
        return true;
    }

    public String toJson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.writeValueAsString(this);
    }

    public static Principal fromJson(String json) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(json, Principal.class);
    }

}
