// Code generated by protoc-gen-puregen. DO NOT EDIT.

package com.booking.services.reservations.model;

import java.util.*;
import java.io.*;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

    // Request for flight booking
public class FlightBookingRequest {
    // Flight search criteria
    @JsonProperty("flightRoutes")
    private List<String> flightRoutes = new ArrayList<>();

    // Required payment information
    @JsonProperty("paymentInfo")
    private PaymentInfo paymentInfo;

    // Include hotel recommendations
    @JsonProperty("includeHotelRecommendations")
    private boolean includeHotelRecommendations;

    // Departure and return dates (Unix timestamp)
    @JsonProperty("departureDate")
    private long departureDate;

    @JsonProperty("returnDate")
    private long returnDate;

    // Number of passengers
    @JsonProperty("numberOfPassengers")
    private int numberOfPassengers;

    public FlightBookingRequest() {}

    public List<String> getFlightRoutes() {
        return flightRoutes;
    }

    public void setFlightRoutes(List<String> flightRoutes) {
        this.flightRoutes = flightRoutes;
    }

    public void addFlightRoutes(String item) {
        if (this.flightRoutes == null) {
            this.flightRoutes = new ArrayList<>();
        }
        this.flightRoutes.add(item);
    }

    public PaymentInfo getPaymentInfo() {
        return paymentInfo;
    }

    public void setPaymentInfo(PaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    public boolean getIncludeHotelRecommendations() {
        return includeHotelRecommendations;
    }

    public void setIncludeHotelRecommendations(boolean includeHotelRecommendations) {
        this.includeHotelRecommendations = includeHotelRecommendations;
    }

    public long getDepartureDate() {
        return departureDate;
    }

    public void setDepartureDate(long departureDate) {
        this.departureDate = departureDate;
    }

    public long getReturnDate() {
        return returnDate;
    }

    public void setReturnDate(long returnDate) {
        this.returnDate = returnDate;
    }

    public int getNumberOfPassengers() {
        return numberOfPassengers;
    }

    public void setNumberOfPassengers(int numberOfPassengers) {
        this.numberOfPassengers = numberOfPassengers;
    }

    public static class Builder {
        private FlightBookingRequest instance = new FlightBookingRequest();

        public Builder setFlightRoutes(List<String> flightRoutes) {
            instance.setFlightRoutes(flightRoutes);
            return this;
        }

        public Builder setPaymentInfo(PaymentInfo paymentInfo) {
            instance.setPaymentInfo(paymentInfo);
            return this;
        }

        public Builder setIncludeHotelRecommendations(boolean includeHotelRecommendations) {
            instance.setIncludeHotelRecommendations(includeHotelRecommendations);
            return this;
        }

        public Builder setDepartureDate(long departureDate) {
            instance.setDepartureDate(departureDate);
            return this;
        }

        public Builder setReturnDate(long returnDate) {
            instance.setReturnDate(returnDate);
            return this;
        }

        public Builder setNumberOfPassengers(int numberOfPassengers) {
            instance.setNumberOfPassengers(numberOfPassengers);
            return this;
        }

        public FlightBookingRequest build() {
            return instance;
        }
    }

    public boolean validate() {
        // Add custom validation logic here
        return true;
    }

    public String toJson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.writeValueAsString(this);
    }

    public static FlightBookingRequest fromJson(String json) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(json, FlightBookingRequest.class);
    }

}
