// Code generated by protoc-gen-puregen. DO NOT EDIT.

package com.booking.services.reservations.model;

import java.util.*;
import java.io.*;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

    // Hotel reservation result for single location
public class HotelReservationResponse_SingleHotelReservationResponse {
    // List of available rooms
    @JsonProperty("availableRooms")
    private List<HotelReservationResponse_AvailableRoom> availableRooms = new ArrayList<>();

    // Error message
    @JsonProperty("error")
    private Error error;

    public HotelReservationResponse_SingleHotelReservationResponse() {}

    public List<HotelReservationResponse_AvailableRoom> getAvailableRooms() {
        return availableRooms;
    }

    public void setAvailableRooms(List<HotelReservationResponse_AvailableRoom> availableRooms) {
        this.availableRooms = availableRooms;
    }

    public void addAvailableRooms(HotelReservationResponse_AvailableRoom item) {
        if (this.availableRooms == null) {
            this.availableRooms = new ArrayList<>();
        }
        this.availableRooms.add(item);
    }

    public Error getError() {
        return error;
    }

    public void setError(Error error) {
        this.error = error;
    }

    public static class Builder {
        private HotelReservationResponse_SingleHotelReservationResponse instance = new HotelReservationResponse_SingleHotelReservationResponse();

        public Builder setAvailableRooms(List<HotelReservationResponse_AvailableRoom> availableRooms) {
            instance.setAvailableRooms(availableRooms);
            return this;
        }

        public Builder setError(Error error) {
            instance.setError(error);
            return this;
        }

        public HotelReservationResponse_SingleHotelReservationResponse build() {
            return instance;
        }
    }

    public boolean validate() {
        // Add custom validation logic here
        return true;
    }

    public String toJson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.writeValueAsString(this);
    }

    public static HotelReservationResponse_SingleHotelReservationResponse fromJson(String json) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(json, HotelReservationResponse_SingleHotelReservationResponse.class);
    }

}
