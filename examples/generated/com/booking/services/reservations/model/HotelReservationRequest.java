// Code generated by protoc-gen-puregen. DO NOT EDIT.

package com.booking.services.reservations.model;

import java.util.*;
import java.io.*;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

    // Request for hotel reservation
public class HotelReservationRequest {
    // Hotel search criteria
    @JsonProperty("hotelLocations")
    private List<String> hotelLocations = new ArrayList<>();

    // List of preferred room types
    @JsonProperty("roomTypes")
    private List<String> roomTypes = new ArrayList<>();

    // Maximum price per night
    @JsonProperty("maxPricePerNight")
    private double maxPricePerNight;

    // Required payment information
    @JsonProperty("paymentInfo")
    private PaymentInfo paymentInfo;

    // Check-in and check-out dates (Unix timestamp)
    @JsonProperty("checkInDate")
    private long checkInDate;

    @JsonProperty("checkOutDate")
    private long checkOutDate;

    // Number of guests
    @JsonProperty("numberOfGuests")
    private int numberOfGuests;

    public HotelReservationRequest() {}

    public List<String> getHotelLocations() {
        return hotelLocations;
    }

    public void setHotelLocations(List<String> hotelLocations) {
        this.hotelLocations = hotelLocations;
    }

    public void addHotelLocations(String item) {
        if (this.hotelLocations == null) {
            this.hotelLocations = new ArrayList<>();
        }
        this.hotelLocations.add(item);
    }

    public List<String> getRoomTypes() {
        return roomTypes;
    }

    public void setRoomTypes(List<String> roomTypes) {
        this.roomTypes = roomTypes;
    }

    public void addRoomTypes(String item) {
        if (this.roomTypes == null) {
            this.roomTypes = new ArrayList<>();
        }
        this.roomTypes.add(item);
    }

    public double getMaxPricePerNight() {
        return maxPricePerNight;
    }

    public void setMaxPricePerNight(double maxPricePerNight) {
        this.maxPricePerNight = maxPricePerNight;
    }

    public PaymentInfo getPaymentInfo() {
        return paymentInfo;
    }

    public void setPaymentInfo(PaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    public long getCheckInDate() {
        return checkInDate;
    }

    public void setCheckInDate(long checkInDate) {
        this.checkInDate = checkInDate;
    }

    public long getCheckOutDate() {
        return checkOutDate;
    }

    public void setCheckOutDate(long checkOutDate) {
        this.checkOutDate = checkOutDate;
    }

    public int getNumberOfGuests() {
        return numberOfGuests;
    }

    public void setNumberOfGuests(int numberOfGuests) {
        this.numberOfGuests = numberOfGuests;
    }

    public static class Builder {
        private HotelReservationRequest instance = new HotelReservationRequest();

        public Builder setHotelLocations(List<String> hotelLocations) {
            instance.setHotelLocations(hotelLocations);
            return this;
        }

        public Builder setRoomTypes(List<String> roomTypes) {
            instance.setRoomTypes(roomTypes);
            return this;
        }

        public Builder setMaxPricePerNight(double maxPricePerNight) {
            instance.setMaxPricePerNight(maxPricePerNight);
            return this;
        }

        public Builder setPaymentInfo(PaymentInfo paymentInfo) {
            instance.setPaymentInfo(paymentInfo);
            return this;
        }

        public Builder setCheckInDate(long checkInDate) {
            instance.setCheckInDate(checkInDate);
            return this;
        }

        public Builder setCheckOutDate(long checkOutDate) {
            instance.setCheckOutDate(checkOutDate);
            return this;
        }

        public Builder setNumberOfGuests(int numberOfGuests) {
            instance.setNumberOfGuests(numberOfGuests);
            return this;
        }

        public HotelReservationRequest build() {
            return instance;
        }
    }

    public boolean validate() {
        // Add custom validation logic here
        return true;
    }

    public String toJson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.writeValueAsString(this);
    }

    public static HotelReservationRequest fromJson(String json) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(json, HotelReservationRequest.class);
    }

}
