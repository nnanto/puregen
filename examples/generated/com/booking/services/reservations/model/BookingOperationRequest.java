// Code generated by protoc-gen-puregen. DO NOT EDIT.

package com.booking.services.reservations.model;

import java.util.*;
import java.io.*;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

public class BookingOperationRequest {
    // Operation ID
    @JsonProperty("operationId")
    private String operationId;

    // Payment info used during original request
    @JsonProperty("paymentInfo")
    private PaymentInfo paymentInfo;

    // Confirm the booking
    @JsonProperty("confirm")
    private boolean confirm;

    public BookingOperationRequest() {
    }

    public String getOperationId() {
        return operationId;
    }

    public void setOperationId(String operationId) {
        this.operationId = operationId;
    }

    public PaymentInfo getPaymentInfo() {
        return paymentInfo;
    }

    public void setPaymentInfo(PaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    public boolean getConfirm() {
        return confirm;
    }

    public void setConfirm(boolean confirm) {
        this.confirm = confirm;
    }

    public static class Builder {
        private BookingOperationRequest instance = new BookingOperationRequest();

        public Builder setOperationId(String operationId) {
            instance.setOperationId(operationId);
            return this;
        }

        public Builder setPaymentInfo(PaymentInfo paymentInfo) {
            instance.setPaymentInfo(paymentInfo);
            return this;
        }

        public Builder setConfirm(boolean confirm) {
            instance.setConfirm(confirm);
            return this;
        }

        public BookingOperationRequest build() {
            return instance;
        }
    }

    public boolean validate() {
        // Add custom validation logic here
        return true;
    }

    public String toJson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.writeValueAsString(this);
    }

    public static BookingOperationRequest fromJson(String json) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(json, BookingOperationRequest.class);
    }

}
