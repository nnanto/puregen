// Code generated by protoc-gen-puregen. DO NOT EDIT.

package com.puregen.examples.user.v1;

import java.util.*;
import java.io.*;
import com.fasterxml.jackson.annotation.*;
import com.fasterxml.jackson.databind.*;

    // User message represents a user in the system
public class User {
    @JsonProperty("id")
    private int id;

    @JsonProperty("name")
    private String name;

    @JsonProperty("email")
    private String email;

    @JsonProperty("isActive")
    private boolean isActive;

    @JsonProperty("tags")
    private List<String> tags = new ArrayList<>();

    @JsonProperty("profile")
    private UserProfile profile;

    public User() {}

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public boolean getIsActive() {
        return isActive;
    }

    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    public List<String> getTags() {
        return tags;
    }

    public void setTags(List<String> tags) {
        this.tags = tags;
    }

    public void addTags(String item) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(item);
    }

    public UserProfile getProfile() {
        return profile;
    }

    public void setProfile(UserProfile profile) {
        this.profile = profile;
    }

    public static class Builder {
        private User instance = new User();

        public Builder setId(int id) {
            instance.setId(id);
            return this;
        }

        public Builder setName(String name) {
            instance.setName(name);
            return this;
        }

        public Builder setEmail(String email) {
            instance.setEmail(email);
            return this;
        }

        public Builder setIsActive(boolean isActive) {
            instance.setIsActive(isActive);
            return this;
        }

        public Builder setTags(List<String> tags) {
            instance.setTags(tags);
            return this;
        }

        public Builder setProfile(UserProfile profile) {
            instance.setProfile(profile);
            return this;
        }

        public User build() {
            return instance;
        }
    }

    public boolean validate() {
        // Add custom validation logic here
        return true;
    }

    public String toJson() throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.writeValueAsString(this);
    }

    public static User fromJson(String json) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        return mapper.readValue(json, User.class);
    }

}
