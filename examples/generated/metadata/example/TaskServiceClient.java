// Code generated by protoc-gen-puregen. DO NOT EDIT.

package metadata.example;

import java.util.*;

public class TaskServiceClient {
    private final Transport transport;

    public TaskServiceClient(Transport transport) {
        this.transport = transport;
    }

    // Create task endpoint with HTTP mapping
    public CreateTaskResponse createTask(Map<String, Object> ctx, CreateTaskRequest request) throws Exception {
        Map<String, Object> enhancedCtx = new HashMap<>(ctx != null ? ctx : new HashMap<>());
        Map<String, String> methodMetadata = TaskServiceMethods.METHOD_METADATA.get(TaskServiceMethods.TaskService_CreateTask);
        if (methodMetadata != null) {
            enhancedCtx.put("method_metadata", methodMetadata);
        }
        return transport.send(enhancedCtx, TaskServiceMethods.TaskService_CreateTask, request, CreateTaskResponse.class);
    }

    // Get task endpoint with caching
    public GetTaskResponse getTask(Map<String, Object> ctx, GetTaskRequest request) throws Exception {
        Map<String, Object> enhancedCtx = new HashMap<>(ctx != null ? ctx : new HashMap<>());
        Map<String, String> methodMetadata = TaskServiceMethods.METHOD_METADATA.get(TaskServiceMethods.TaskService_GetTask);
        if (methodMetadata != null) {
            enhancedCtx.put("method_metadata", methodMetadata);
        }
        return transport.send(enhancedCtx, TaskServiceMethods.TaskService_GetTask, request, GetTaskResponse.class);
    }

}
