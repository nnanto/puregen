syntax = "proto3";

package puregen.examples.user.v1;

option go_package = "github.com/puregen/examples/proto/user/v1;userv1";
option java_package = "com.puregen.examples.user.v1";


// User message represents a user in the system
message User {
  int32 id = 1;
  string name = 2;
  string email = 3;
  bool is_active = 4;
  repeated string tags = 5;
  UserProfile profile = 6;
}

// UserProfile contains additional user information
message UserProfile {
  string bio = 1;
  string avatar_url = 2;
  int64 created_at = 3;
}

// CreateUserRequest is the request for creating a user
message CreateUserRequest {
  string name = 1;
  string email = 2;
  UserProfile profile = 3;
}

// CreateUserResponse is the response for creating a user
message CreateUserResponse {
  User user = 1;
  bool success = 2;
  string message = 3;
}

// GetUserRequest is the request for getting a user
message GetUserRequest {
  int32 id = 1;
}

// GetUserResponse is the response for getting a user
message GetUserResponse {
  User user = 1;
  bool found = 2;
}

// UserService provides operations for managing users
service UserService {
  // CreateUser creates a new user
  // puregen:metadata: {"method":"POST", "path":"/users"}
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  
  // GetUser retrieves a user by ID
  // puregen:metadata:{"method":"GET", "path":"/users/{id}"}
  // This method retrieves a user by their unique ID.
  // It returns the user details if found, otherwise indicates not found.
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
}
