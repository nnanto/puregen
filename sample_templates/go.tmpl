{{ define "metadata" -}}
{
  "extension":       "go"
}
{{- end }}

package {{if .Package}}{{.Package}}{{else}}{{lower .Name}}{{end}}

import (
	"encoding/json"
)

{{range .Services}}
// {{.Name}} service interface
type {{.Name}} interface {
{{range .Methods}}	{{.Name}}(input {{.Input}}) ({{.Output}}, error)
{{end}}}

// {{.Name}}Impl implements {{.Name}}
type {{.Name}}Impl struct{}

func New{{.Name}}() *{{.Name}}Impl {
	return &{{.Name}}Impl{}
}

{{end}}

{{range .Messages}}
// {{.Name}} represents {{.Description}}
type {{.Name}} struct {
{{range $fieldName, $field := .Fields}}	{{title $fieldName}} {{$field.Type}} `json:"{{$fieldName}}"` // {{$field.Description}}
{{end}}}

func (t *{{.Name}}) ToJSON() ([]byte, error) {
	return json.Marshal(t)
}

func (t *{{.Name}}) FromJSON(data []byte) error {
	return json.Unmarshal(data, t)
}
{{end}}
